@model FrescoPlayTest.Web.Models.AnswerPageViewModel
@{
    ViewBag.Title = "Answer Detail";
}

<h2>Answer Details</h2>
<h3> Trial Count : @Model.TrialCount</h3>
@using (Html.BeginForm("GenerateAnswer","Home",FormMethod.Post,new { @id = "ansform"}))
{
    @Html.HiddenFor(Model => Model.TrialCount)
    @Html.HiddenFor(Model => Model.QuizQuestionJsonString)
    @Html.HiddenFor(Model => Model.QuizAnswerJsonString)
    @Html.HiddenFor(Model => Model.AllZeroString)
    @Html.HiddenFor(Model => Model.AnswerCountString)
    @Html.HiddenFor(Model => Model.AnswerString)
    @Html.HiddenFor(Model => Model.CorrectAnswerString)
    @Html.HiddenFor(Model => Model.EnrollmentDetails.ApiKey)
    @Html.HiddenFor(Model => Model.EnrollmentDetails.ContentId)
    @Html.HiddenFor(Model => Model.EnrollmentDetails.EnrolmentId)
    <div class="row">
        <div class="custom-control custom-checkbox">
            @Html.CheckBoxFor(Model => Model.IsChangesCorrect,new { @class="custom-control-input", @id= "IsChangesCorrect" })
            <label class="custom-control-label" for="IsChangesCorrect">Change is correct</label>
        </div>
        <div class="custom-control custom-checkbox">
            @Html.CheckBoxFor(Model => Model.IsChangesWrong, new { @class = "custom-control-input", @id = "IsChangesWrong" })
            <label class="custom-control-label" for="IsChangesWrong">Change is wrong</label>
        </div>
    </div>

    <button class="btn btn-primary" type="submit" id="newansbtn">Get new answer</button>
}

<div class="row">
    <div class="col-lg-6">
        <label> Copy the answer</label>
    </div>
</div>
<div class="row">
    <span id="copyTarget2">{"data": "@Model.QuizAnswerJsonString"}</span> <button id="copyButton2">Copy</button><br><br>
</div>
<input type="hidden" value='{"data": "@Model.QuizAnswerJsonString"}' />
<br><br>
<span id="msg"></span><br>
<script type="text/javascript">
    var result = '@Model.QuizAnswerJsonString';

    $(document).ready(function () {
        var actualresult = '{"data": "' +JSON.stringify( result) + '"}';
        $("#ansform").on("submit", function () {
            $("#newansbtn").prop("disabled", true);
        });
    });

    document.getElementById("copyButton2").addEventListener("click", function () {
        copyToClipboardMsg(document.getElementById("copyTarget2"), "msg");
    });

    function copyToClipboardMsg(elem, msgElem) {
        var succeed = copyToClipboard(elem);
        var msg;
        if (!succeed) {
            msg = "Copy not supported or blocked.  Press Ctrl+c to copy."
        } else {
            msg = "Text copied to the clipboard."
        }
        if (typeof msgElem === "string") {
            msgElem = document.getElementById(msgElem);
        }
        msgElem.innerHTML = msg;
    }


    function copyToClipboard(elem) {
        // create hidden text element, if it doesn't already exist
        var targetId = "_hiddenCopyText_";
        var isInput = elem.tagName === "INPUT" || elem.tagName === "TEXTAREA";
        var origSelectionStart, origSelectionEnd;
        if (isInput) {
            // can just use the original source element for the selection and copy
            target = elem;
            origSelectionStart = elem.selectionStart;
            origSelectionEnd = elem.selectionEnd;
        } else {
            // must use a temporary form element for the selection and copy
            target = document.getElementById(targetId);
            if (!target) {
                var target = document.createElement("textarea");
                target.style.position = "absolute";
                target.style.left = "-9999px";
                target.style.top = "0";
                target.id = targetId;
                document.body.appendChild(target);
            }
            target.textContent = elem.textContent;
        }
        // select the content
        var currentFocus = document.activeElement;
        target.focus();
        target.setSelectionRange(0, target.value.length);

        // copy the selection
        var succeed;
        try {
            succeed = document.execCommand("copy");
        } catch (e) {
            succeed = false;
        }
        // restore original focus
        if (currentFocus && typeof currentFocus.focus === "function") {
            currentFocus.focus();
        }

        if (isInput) {
            // restore prior selection
            elem.setSelectionRange(origSelectionStart, origSelectionEnd);
        } else {
            // clear temporary content
            target.textContent = "";
        }
        return succeed;
    }
</script>

